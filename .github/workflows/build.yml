name: Build Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
      # Don't fail the entire workflow if one OS build fails
      fail-fast: false

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        timeout-minutes: 15

      - name: Install dmg-license for macOS
        if: matrix.os == 'macos-latest'
        run: npm install dmg-license
        
      - name: Build for Windows
        run: npm run package:win
        if: matrix.os == 'windows-latest'
        timeout-minutes: 30
        env:
          GH_TOKEN: ${{ github.token }}
          USE_HARD_LINKS: false
          
      - name: Build for macOS
        run: npm run package:mac
        if: matrix.os == 'macos-latest'
        timeout-minutes: 30
        env:
          GH_TOKEN: ${{ github.token }}
          USE_HARD_LINKS: false
          CSC_IDENTITY_AUTO_DISCOVERY: false

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ttpg-twitch-helper-${{ matrix.os }}
          path: dist
          if-no-files-found: error
        timeout-minutes: 10




